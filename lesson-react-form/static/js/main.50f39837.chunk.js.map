{"version":3,"sources":["actions/index.js","reducers/index.js","reducers/reducer_posts.js","components/header.js","components/layout.js","components/post_index.js","components/post_new.js","components/post_show.js","index.js"],"names":["FETCH_POSTS","CREATE_POST","FETCH_POST","DELETE_POST","ROOT_URL","API_KEY","rootReducer","combineReducers","posts","state","arguments","length","undefined","action","type","_","omit","payload","mapKeys","data","post","newState","Object","objectSpread","id","form","formReducer","header","react_default","a","createElement","className","src","height","Layout","this","props","children","Component","PostIndex","fetchPosts","Link","to","renderPost","map","key","concat","title","connect","request","axios","get","PostNew","field","_field$meta","meta","touched","error","label","assign","input","values","_this","createPost","history","push","handleSubmit","onSubmit","bind","Field","name","component","renderField","class","role","aria-label","reduxForm","validate","errors","categories","content","callback","then","PostShow","fetchPost","match","params","deletePost","style","width","onClick","onDeleteClick","_ref","ownProps","delete","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","HashRouter","layout","Switch","Route","path","document","querySelector"],"mappings":"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","file":"static/js/main.50f39837.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const FETCH_POSTS = 'fetch_posts';\nexport const CREATE_POST = 'create_post';\nexport const FETCH_POST = 'fetch_post';\nexport const DELETE_POST = 'delete_post';\n\nconst ROOT_URL = 'https://reduxblog.herokuapp.com/api';\nconst API_KEY = '?key=kal';\n\nexport function fetchPosts() {\n    const request = axios.get(`${ROOT_URL}/posts${API_KEY}`);\n\n    return {\n        type: FETCH_POSTS,\n        payload: request,\n    }\n}\n\n\nexport function createPost(values, callback) {\n    const request = axios.post(`${ROOT_URL}/posts${API_KEY}`, values).then(() => callback());\n\n    return {\n        type: CREATE_POST,\n        payload: request,\n    }\n\n}\n\nexport function fetchPost(id) {\n    const request = axios.get(`${ROOT_URL}/posts/${id}${API_KEY}`);\n\n    return {\n        type: FETCH_POST,\n        payload: request,\n    }\n}\n\nexport function deletePost(id, callback) {\n    axios.delete(`${ROOT_URL}/posts/${id}${API_KEY}`)\n        .then(() => {\n            callback();\n        });\n\n    return {\n        type: DELETE_POST,\n        payload: id,\n    }\n}","import {combineReducers} from 'redux';\nimport {reducer as formReducer} from 'redux-form';\nimport PostReducer from \"./reducer_posts\";\n\nconst rootReducer = combineReducers({\n    posts: PostReducer,\n    form: formReducer,\n});\n\nexport default rootReducer;\n","import { FETCH_POSTS, FETCH_POST, DELETE_POST } from '../actions/index';\nimport _ from 'lodash';\n\nexport default function (state = [], action) {\n    switch (action.type) {\n        case DELETE_POST:\n            return _.omit(state, action.payload);\n        case FETCH_POSTS:\n            return _.mapKeys(action.payload.data, 'id')\n        case FETCH_POST:\n            const post = action.payload.data;\n            const newState = { ...state };\n            newState[post.id] = post;\n            return newState;\n        //return {...state, [action.payload.data.id]: action.payload.data}\n        default:\n            return state;\n    }\n}\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div className=\"py-5 text-center\">\n            <img className=\"d-block mx-auto mb-4\" src=\"http://cdn.onlinewebfonts.com/svg/img_416667.png\" height=\"150\" />\n            <h2>React Form</h2>\n        </div>\n    )\n};","import React, { Component } from 'react';\nimport Header from './header';\n\nclass Layout extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <Header />\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport { fetchPosts } from '../actions';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nclass PostIndex extends Component {\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"text-xs-right\">\n                    <Link to=\"/posts/new\" className=\"btn btn-primary float-right\">\n                        Add a post\n                    </Link>\n                </div>\n                <h3>Posts</h3>\n                <ul className=\"list-group\">\n                    {this.renderPost()}\n                </ul>\n            </div>\n        );\n    }\n\n    renderPost() {\n        return _.map(this.props.posts, post => {\n            return (\n                <li className=\"list-group-item\" key={post.id}>\n                    <Link to={`/posts/${post.id}`}>\n                    {post.title}\n                    </Link>\n                </li>\n            )\n        });\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts\n    };\n}\n\nexport default connect(mapStateToProps, { fetchPosts })(PostIndex);\n","import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createPost } from \"../actions\";\n\n\nclass PostNew extends Component {\n\n    renderField(field) {\n\n        const { meta: { touched, error } } = field;\n        const className = `form-group ${touched && error ? 'has-danger' : ''}`\n\n        return (\n            <div className={className}>\n                <label>{field.label}</label>\n                <input\n                    className=\"form-control\"\n                    type=\"text\"\n                    {...field.input}\n                />\n\n                {touched ? error : ''}\n            </div>\n        )\n    }\n\n    onSubmit(values) {\n\n        this.props.createPost(values, () => {\n            this.props.history.push('/');\n        });\n    }\n\n    render() {\n        const { handleSubmit } = this.props;\n        return (\n            <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n                <Field\n                    label=\"Title\"\n                    name=\"title\"\n                    component={this.renderField}\n                />\n                <Field\n                    label=\"Categories\"\n                    name=\"categories\"\n                    component={this.renderField}\n                />\n                <Field\n                    label=\"Post content\"\n                    name=\"content\"\n                    component={this.renderField}\n                />\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    <Link to=\"/\" className=\"btn btn-danger\">Cancel</Link>\n                </div>\n            </form>\n        )\n    }\n}\n\nfunction validate(values) {\n    const errors = {};\n\n    if (!values.title) {\n        errors.title = \"enter a title!\"\n    }\n\n    if (!values.categories) {\n        errors.categories = \"enter a categories!\"\n    }\n\n    if (!values.content) {\n        errors.content = \"enter some content please!\"\n    }\n\n    return errors;\n}\n\nexport default reduxForm({\n    validate: validate,\n    form: 'PostNewForm',\n})(\n    connect(null, { createPost })(PostNew)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPost, deletePost } from '../actions';\nimport { Link } from 'react-router-dom';\n\n\nclass PostShow extends Component {\n\n    componentDidMount() {\n        if (!this.props.post) {\n            this.props.fetchPost(this.props.match.params.id);\n        }\n    }\n\n    onDeleteClick() {\n        const id = this.props.match.params.id;\n        this.props.deletePost(id, () => {\n            this.props.history.push('/');\n        });\n    }\n\n    render() {\n        const { post } = this.props;\n\n        if (!post) {\n            return <div>Loading</div>\n        }\n\n        return (\n            <div>\n                <nav aria-label=\"breadcrumb\">\n                    <ol class=\"breadcrumb\">\n                        <li style={{width: '100%'}}>\n                            <Link to=\"/\">Back to index</Link>\n                            <button\n                                className=\"btn btn-sm btn-danger float-right\"\n                                onClick={this.onDeleteClick.bind(this)}\n                            >\n                                Delete Post\n                        </button>\n                        </li>\n                    </ol>\n                </nav>\n                <h3>{post.title}</h3>\n                <h6>{post.categories}</h6>\n                <p>{post.content}</p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ posts }, ownProps) => {\n    return {\n        post: posts[ownProps.match.params.id],\n    }\n};\n\nexport default connect(mapStateToProps, { fetchPost, deletePost })(PostShow);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReduxPromise from 'redux-promise';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport reducers from './reducers';\n\nimport Layout from './components/layout';\nimport PostIndex from './components/post_index';\nimport PostNew from './components/post_new';\nimport PostShow from './components/post_show';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route path=\"/posts/new\" component={PostNew} />\n                    <Route path=\"/posts/:id\" component={PostShow} />\n                    <Route path=\"/\" component={PostIndex} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>,\n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}
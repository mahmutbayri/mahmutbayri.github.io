{"version":3,"sources":["actions/index.js","containers/search_bar.js","components/chart.js","components/google_map.js","containers/weather_list.js","components/header.js","components/app.js","reducers/index.js","reducers/reducer_weather.js","index.js"],"names":["ROOT_URL","concat","FETCH_WEATHER","fetchWeather","city","url","request","axios","get","type","payload","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","onInputChange","bind","assertThisInitialized","onFormSubmit","react_default","a","createElement","className","onSubmit","placeholder","value","onChange","event","setState","target","preventDefault","Component","connect","dispatch","bindActionCreators","chart","build","height","width","data","color","_","round","sum","length","units","GoogleMap","window","google","maps","Map","refs","map","zoom","center","lat","lng","lon","ref","WeatherList","weather","renderWeather","cityData","name","temps","list","main","temp","pressures","pressure","humidities","humidity","_cityData$city$coord","coord","key","google_map","_ref","header","src","App","search_bar","weather_list","rootReducer","combineReducers","arguments","undefined","action","toConsumableArray","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","reducers","__REDUX_DEVTOOLS_EXTENSION__","app_App","document","querySelector"],"mappings":"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","file":"static/js/main.cfe7ff4c.chunk.js","sourcesContent":["//http://api.openweathermap.org/data/2.5/forecast?units=metric&appid=4505fab19b748345a39d745d61d5c8a6\nimport axios from 'axios';\n\nconst API_KEY = '4505fab19b748345a39d745d61d5c8a6';\nconst ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\n\nexport const FETCH_WEATHER = 'FETCH_WEATHER';\n\nexport function fetchWeather(city) {\n    const url = `${ROOT_URL}&q=${city},tr`;\n    const request = axios.get(url);\n\n    return {\n        type: FETCH_WEATHER,\n        payload: request,\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from \"../actions\";\n\nclass SearchBar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            term: '',\n        };\n\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    render() {\n        return (\n            <form className=\"input-group\" onSubmit={this.onFormSubmit}>\n                <input\n                    placeholder=\"Get a five data forecast in your favorite cities\"\n                    className=\"form-control\"\n                    value={this.state.term}\n                    onChange={this.onInputChange}\n                />\n                <div className=\"input-group-append\">\n                    <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\n                </div>\n            </form>\n        );\n    }\n\n    onInputChange(event) {\n        this.setState({\n            term: event.target.value,\n        })\n    }\n\n    onFormSubmit(event) {\n        event.preventDefault();\n\n        this.props.fetchWeather(this.state.term);\n        this.setState({\n            term: '',\n        });\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({ fetchWeather }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React from 'react';\nimport _ from 'lodash';\nimport { Sparklines, SparklinesLine, SparklinesReferenceLine } from 'react-sparklines';\n\nfunction average(data) {\n    return _.round(_.sum(data) / data.length);\n}\n\nexport default (props) => {\n    return (\n        <div>\n            <Sparklines height={120} width={180} data={props.data}>\n                <SparklinesLine color={props.color} />\n                <SparklinesReferenceLine type=\"avg\" />\n            </Sparklines>\n            <div>{average(props.data)} {props.units}</div>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\n\nclass GoogleMap extends Component {\n\n    componentDidMount() {\n        new window.google.maps.Map(this.refs.map, {\n            zoom: 12,\n            center: {\n                lat: this.props.lat,\n                lng: this.props.lon,\n            }\n        });\n    }\n\n    render() {\n        return <div ref=\"map\" />\n    }\n}\n\nexport default GoogleMap;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\nimport GoogleMap from '../components/google_map';\n\nclass WeatherList extends Component {\n    render() {\n        return (\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th>City</th>\n                        <th>Temperature (K)</th>\n                        <th>Pressure (hPa)</th>\n                        <th>Humidity (%)</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {this.props.weather.map(this.renderWeather)}\n\n                </tbody>\n            </table>\n        );\n    }\n\n    renderWeather(cityData) {\n        const name = cityData.city.name;\n        const temps = cityData.list.map(weather => weather.main.temp);\n        const pressures = cityData.list.map(weather => weather.main.pressure);\n        const humidities = cityData.list.map(weather => weather.main.humidity);\n        const { lon, lat } = cityData.city.coord;\n        return (\n            <tr key={name}>\n                <td>\n                    <GoogleMap lon={lon} lat={lat} />\n                </td>\n                <td>\n                    <Chart data={temps} color=\"orange\" units=\"K\" />\n                </td>\n                <td>\n                    <Chart data={pressures} color=\"green\" units=\"hPa\" />\n                </td>\n                <td>\n                    <Chart data={humidities} color=\"black\" units=\"%\" />\n                </td>\n            </tr>\n        );\n    }\n}\n\n/**\n * state -> state.weather\n */\nfunction mapStateToProps({ weather }) {\n    return {\n        weather,\n    };\n}\n\nexport default connect(mapStateToProps)(WeatherList);\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div className=\"py-5 text-center\">\n            <img className=\"d-block mx-auto mb-4\" src=\"https://media.dragstone.com/content/icon-openweathermap-1.png\" height=\"100\" />\n            <h2>Weather Forecast</h2>\n        </div>\n    )\n};","import React, { Component } from 'react';\nimport SearchBar from '../containers/search_bar';\nimport WeatherList from '../containers/weather_list';\nimport Header from '../components/header';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <Header />\n                <SearchBar />\n                <WeatherList />\n            </div>\n        );\n    }\n}\n","import { combineReducers } from 'redux';\nimport WeatherReducer from \"./reducer_weather\";\n\nconst rootReducer = combineReducers({\n    weather: WeatherReducer,\n});\n\nexport default rootReducer;\n","import { FETCH_WEATHER } from '../actions/index';\n\nexport default function (state = [], action) {\n\n    switch (action.type) {\n        case FETCH_WEATHER:\n            // return state.concat([action.payload.data]);\n            return [action.payload.data, ...state];\n    }\n\n    return state;\n}\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux';\nimport ReduxPromise from 'redux-promise';\n\nimport './index.css';\n\nimport App from './components/app';\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())}>\n        <App/>\n    </Provider>,\n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}